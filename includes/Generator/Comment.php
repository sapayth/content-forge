<?php
namespace ContentForge\Generator;

use WP_Error;
use ContentForge\Activator;

global $wpdb;

if (!defined('ABSPATH')) {
	exit;
}

/**
 * Generator for fake comments.
 */
class Comment extends Generator
{
	/**
	 * Generate fake comments for selected post types.
	 *
	 * @param int $count
	 * @param array $args ['post_types' => array, ...]
	 * @return array Array of generated comment IDs.
	 */
	public function generate($count = 1, $args = [])
	{
		$ids = [];
		$post_types = isset($args['post_types']) ? (array) $args['post_types'] : ['post'];
		$posts = $this->get_random_posts($post_types, $count);

		for ($i = 0; $i < $count; $i++) {
			$post = $posts[array_rand($posts)];
			$comment_data = [
				'comment_post_ID' => $post->ID,
				'comment_author' => $this->randomize_author(),
				'comment_content' => $this->randomize_content(),
				'comment_approved' => 1,
				'user_id' => $this->user_id,
			];

			$comment_id = wp_insert_comment($comment_data);

			if (!is_wp_error($comment_id) && $comment_id) {
				$ids[] = $comment_id;
				$this->track_generated($comment_id, $post->ID);
			}
		}

		return $ids;
	}

	/**
	 * Get random posts from selected post types.
	 *
	 * @param array $post_types
	 * @param int $count
	 * @return array
	 */
	private function get_random_posts($post_types, $count)
	{
		$args = [
			'post_type' => $post_types,
			'posts_per_page' => $count * 2, // Get more than needed for randomness
			'post_status' => 'publish',
			'fields' => 'all',
			'orderby' => 'rand',
		];
		return get_posts($args);
	}

	/**
	 * Generate a random author name.
	 *
	 * @return string
	 */
	private function randomize_author()
	{
		$names = [
			'Alex',
			'Jordan',
			'Taylor',
			'Morgan',
			'Casey',
			'Riley',
			'Jamie',
			'Avery',
			'Parker',
			'Quinn',
			'Skyler',
			'Rowan',
			'Sawyer',
			'Dakota',
			'Reese',
			'Emerson',
			'Finley',
			'Harper',
			'Kendall',
			'Logan'
		];
		return $names[array_rand($names)];
	}

	/**
	 * Generate random comment content.
	 *
	 * @return string
	 */
	private function randomize_content()
	{
		$sentences = [
			'This is a fantastic post! Thanks for sharing.',
			'I found this really helpful and informative.',
			'Great insights, I learned something new today.',
			'I appreciate the detailed explanation.',
			'This topic is very relevant to me right now.',
			'Well written and easy to understand.',
			'I have a question about one of the points mentioned.',
			'Looking forward to more content like this.',
			'Thank you for putting this together!',
			'This really clarified things for me.'
		];
		return $sentences[array_rand($sentences)] . ' <em>(Generated by Content Forge)</em>';
	}

	/**
	 * Delete generated comments by IDs.
	 *
	 * @param array $object_ids
	 * @return int Number of items deleted.
	 */
	public function delete(array $object_ids)
	{
		$deleted = 0;
		foreach ($object_ids as $comment_id) {
			if (wp_delete_comment($comment_id, true)) {
				$deleted++;
				$this->untrack_generated($comment_id);
			}
		}
		return $deleted;
	}

	/**
	 * Track generated comment in the custom DB table.
	 *
	 * @param int $comment_id
	 * @param int $post_id
	 */
	protected function track_generated($comment_id, $post_id)
	{
		global $wpdb;

		Activator::create_tracking_table();

		$wpdb->insert(
			$wpdb->prefix . 'cforge',
			[
				'object_id' => $comment_id,
				'data_type' => 'comment',
				'post_id' => $post_id,
				'created_at' => current_time('mysql'),
				'created_by' => $this->user_id
			]
		);
	}

	/**
	 * Remove tracking info for a deleted comment.
	 *
	 * @param int $comment_id
	 */
	protected function untrack_generated($comment_id)
	{
		global $wpdb;

		$wpdb->delete(
			$wpdb->prefix . 'cforge',
			[
				'object_id' => $comment_id,
				'data_type' => 'comment',
			]
		);
	}
}