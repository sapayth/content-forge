<?php

namespace ContentForge\Generator;

use WP_Error;
use ContentForge\Activator;

global $wpdb;
if (!defined('ABSPATH')) {
    exit;
}

/**
 * Generator for fake comments.
 */
class Comment extends Generator
{
    /**
     * Data type for this generator.
     *
     * @var string
     */
    protected $data_type = 'comment';

    /**
     * Generate fake comments for selected post types.
     *
     * @param int   $count
     * @param array $args ['post_types' => array, ...]
     *
     * @return array Array of generated comment IDs.
     */
    public function generate($count = 1, $args = [])
    {
        $ids = [];
        $post_types = isset($args['post_types']) ? (array) $args['post_types'] : ['post'];
        $comment_status = isset($args['comment_status']) ? $args['comment_status'] : 'approve';
        $posts = cforge_get_random_post_ids($post_types, $count);

        for ($i = 0; $i < $count; $i++) {
            $post_id = $posts[array_rand($posts)];

            // Map UI status to wp_insert_comment 'comment_approved' value
            if ('hold' === $comment_status) {
                $comment_status = 0;
            } elseif ('spam' === $comment_status) {
                $comment_status = 'spam';
            }
            $comment_data = [
                'comment_post_ID' => $post_id,
                'comment_author' => $this->randomize_author(),
                'comment_content' => $this->randomize_content(),
                'comment_approved' => $comment_status,
                'user_id' => $this->user_id,
            ];
            $comment_id = wp_insert_comment($comment_data);
            if (!is_wp_error($comment_id) && $comment_id) {
                $ids[] = $comment_id;
                $this->track_generated($comment_id);
            }
        }

        return $ids;
    }

    /**
     * Generate a random author name.
     *
     * @return string
     */
    private function randomize_author()
    {
        $names = [
            'Alex',
            'Jordan',
            'Taylor',
            'Morgan',
            'Casey',
            'Riley',
            'Jamie',
            'Avery',
            'Parker',
            'Quinn',
            'Skyler',
            'Rowan',
            'Sawyer',
            'Dakota',
            'Reese',
            'Emerson',
            'Finley',
            'Harper',
            'Kendall',
            'Logan',
        ];

        return $names[array_rand($names)];
    }

    /**
     * Generate random comment content.
     *
     * @return string
     */
    private function randomize_content()
    {
        $sentences = [
            'This is a fantastic post! Thanks for sharing.',
            'I found this really helpful and informative.',
            'Great insights, I learned something new today.',
            'I appreciate the detailed explanation.',
            'This topic is very relevant to me right now.',
            'Well written and easy to understand.',
            'I have a question about one of the points mentioned.',
            'Looking forward to more content like this.',
            'Thank you for putting this together!',
            'This really clarified things for me.',
        ];

        return $sentences[array_rand($sentences)] . ' <em>(Generated by Content Forge)</em>';
    }

    /**
     * Delete generated comments by IDs.
     *
     * @param array $object_ids
     *
     * @return int Number of items deleted.
     */
    public function delete(array $object_ids)
    {
        $deleted = 0;
        foreach ($object_ids as $comment_id) {
            if (wp_delete_comment($comment_id, true)) {
                $deleted++;
                $this->untrack_generated($comment_id);
            }
        }

        return $deleted;
    }

    /**
     * Track generated comment in the custom DB table.
     *
     * @param int $comment_id
     * @param int $post_id
     */
    protected function track_generated($comment_id)
    {
        global $wpdb;
        // We use direct DB access here because we are tracking generated comments in a custom table,
        // and there is no WordPress API for this use case. All data is sanitized and prepared.
        Activator::create_tracking_table();

        $table = $wpdb->prefix . 'cforge';
        $object_id = intval($comment_id);
        $data_type = sanitize_key($this->data_type);
        $created_at = current_time('mysql');
        $created_by = intval($this->user_id);

        $result = $wpdb->query(
            $wpdb->prepare(
                "INSERT INTO $table (object_id, data_type, created_at, created_by) VALUES (%d, %s, %s, %d)",
                $object_id,
                $data_type,
                $created_at,
                $created_by
            )
        );

        if ($result === false) {
            // Optionally log or handle the error
            error_log('Failed to insert generated comment tracking record for comment_id: ' . $object_id);
        }
    }

    /**
     * Remove tracking info for a deleted comment.
     *
     * @param int $comment_id
     */
    protected function untrack_generated($comment_id)
    {
        global $wpdb;
        $table = $wpdb->prefix . 'cforge';
        $object_id = intval($comment_id);
        $data_type = 'comment';
        $wpdb->query(
            $wpdb->prepare(
                "DELETE FROM $table WHERE object_id = %d AND data_type = %s",
                $object_id,
                $data_type
            )
        );
    }
}